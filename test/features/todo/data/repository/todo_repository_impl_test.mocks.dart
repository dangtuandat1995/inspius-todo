// Mocks generated by Mockito 5.3.2 from annotations
// in todo_firestore/test/features/todo/data/repository/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i7;
import 'package:dartz/dartz.dart' as _i3;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_firestore/core/failures/failure.dart' as _i6;
import 'package:todo_firestore/features/todo/data/data_source/todo_data_source.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeInternetConnectionChecker_0 extends _i1.SmartFake
    implements _i2.InternetConnectionChecker {
  _FakeInternetConnectionChecker_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoDataSource extends _i1.Mock implements _i4.TodoDataSource {
  MockTodoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.InternetConnectionChecker get connectionChecker => (super.noSuchMethod(
        Invocation.getter(#connectionChecker),
        returnValue: _FakeInternetConnectionChecker_0(
          this,
          Invocation.getter(#connectionChecker),
        ),
      ) as _i2.InternetConnectionChecker);
  @override
  _i5.Future<
      _i3.Either<_i6.Failure,
          _i7.CollectionReference<Map<String, dynamic>>>> getTodoCollection() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoCollection,
          [],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.Failure,
                    _i7.CollectionReference<Map<String, dynamic>>>>.value(
            _FakeEither_1<_i6.Failure,
                _i7.CollectionReference<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #getTodoCollection,
            [],
          ),
        )),
      ) as _i5.Future<
          _i3.Either<_i6.Failure,
              _i7.CollectionReference<Map<String, dynamic>>>>);
}
